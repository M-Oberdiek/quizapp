@import "components/button.css";
@import "components/card.css";
@import "components/header.css";
@import "components/navigation.css";
@import "global.css";

main {
  display: flex;
  position: relative;
  top: 120px;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

h2,
h3 {
  color: white;
}

.profPicName {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
  color: white;
  font-size: 200%;
  border-radius: 1.25rem;
  height: 250px;
  width: 80%;
}

.profPic {
  height: 150px;
  border: 2px solid orange;
  border-radius: 50%;
  height: 200px;
  width: auto;
  padding: 1.25rem;
  background-color: rgb(120, 120, 120);
}

.profName {
  height: 150px;
  border: 2px solid orange;
  border-radius: 1.25rem;
  height: 200px;
  width: 80%;
  padding: 1.25rem;
  background-color: rgb(120, 120, 120);
  vertical-align: middle;
}

.ProInfo {
  display: flex;

  flex-direction: column;
  color: white;
  margin: 1.25rem;
}

.ProAbout {
  border: 2px solid orange;
  border-radius: 1.25rem;
  height: 50px;
  width: 200px;
  padding: 10px 0 0 20px;
}

.aboutText {
  flex: 1;
  flex-wrap: wrap;
  text-align: justify;
  border: 2px solid orange;
  border-radius: 1.25rem;
  height: 150px;
  padding: 20px;
}

.counters {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  color: white;
  margin: 20px;
}

.numCards,
.numBookmarks {
  display: flex;
  align-items: center;
  text-align: center;
  border: 2px solid orange;
  border-radius: 1.25rem;
  height: 80px;
  width: 160px;
  padding: 10px;
  margin: 20px;
}

.cardImage {
  background-color: orange;
  border-radius: 10px;
  border: 1px solid #7788ff;
  height: 50px;
  width: 80px;
  padding: 15px 0 0 0px;
}

.countCards,
.countBookmarks {
  flex: 1;
  font-size: xx-large;
  font-weight: bolder;
}

.switcher {
  display: flex;
  align-items: center;
  justify-content: space-around;
}

.settings {
  display: flex;

  border: 2px solid orange;
  border-radius: 1.25rem;
  height: 50px;
  width: 200px;
}

.toggle > div {
  position: relative;
  padding: 10px;
  width: 150px;
  height: 75px;
  border-radius: 50px;
  box-shadow: 0 -1px 1px 0 rgba(0, 0, 0, 0.5),
    0px 1px 1px 0 rgba(255, 255, 255, 1);
  background: rgb(189, 191, 193);
  background: linear-gradient(
    to bottom,
    rgba(189, 191, 193, 1) 0%,
    rgba(249, 251, 254, 1) 100%
  );
}

.toggle > div > input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  top: -3px;
  left: 17px;
  width: 130px;
  height: 55px;
  z-index: 5;
}

.toggle > div > input[type="checkbox"] ~ div {
  width: 130px;
  height: 55px;
  border-radius: 50px;
  border: 1px solid #979797;
  box-shadow: inset 5px 0 0 0 rgba(0, 0, 0, 0.1),
    inset -5px 0 0 0 rgba(0, 0, 0, 0.1),
    inset -6px 0 0 0 rgba(255, 255, 255, 0.5),
    inset -4px 6px 11px -5px rgba(0, 0, 0, 0.2),
    inset 1px 1px 0 0 rgba(255, 255, 255, 1),
    -6px 4px 11px -7px rgba(0, 0, 0, 0.5);
  background: rgb(253, 252, 251);
  background: linear-gradient(
    to right,
    rgba(253, 252, 251, 1) 37%,
    rgba(229, 229, 229, 1) 61%
  );
}

.toggle > div > input[type="checkbox"]:checked ~ div {
  box-shadow: inset -5px 0 0 0 rgba(0, 0, 0, 0.1),
    inset 5px 0 0 0 rgba(0, 0, 0, 0.1), inset 6px 0 0 0 rgba(255, 255, 255, 0.5),
    inset -4px 6px 11px -5px rgba(0, 0, 0, 0.2),
    inset 1px 1px 0 0 rgba(255, 255, 255, 1),
    -6px 4px 11px -7px rgba(0, 0, 0, 0.5);
  background: rgb(229, 229, 229);
  background: linear-gradient(
    to right,
    rgba(229, 229, 229, 1) 39%,
    rgba(253, 252, 251, 1) 63%
  );
}

.toggle > div > input[type="checkbox"] ~ div:before {
  content: attr(data-unchecked);
  display: block;
  position: absolute;
  border-radius: 10px;
  top: 27px;
  left: 30px;
}

.toggle > div > input[type="checkbox"] ~ div:after {
  content: attr(data-checked);
  color: #df0000;
  text-shadow: 0 1px 0 #fff, 0px 0 7px #df0000;
  filter: dropshadow(color=#df0000, offx=0, offy=0);
  display: block;
  position: absolute;
  border-radius: 10px;
  top: 27px;
  left: 100px;
}

.toggle > div > input[type="checkbox"]:checked ~ div:before {
  color: #119400;
  text-shadow: 0 1px 0 #fff, 0px 0 7px #007a08;
  filter: dropshadow(color=#007a08, offx=0, offy=0);
}

.toggle > div > input[type="checkbox"]:checked ~ div:after {
  color: #000;
  text-shadow: none;
  filter: dropshadow(none);
}
